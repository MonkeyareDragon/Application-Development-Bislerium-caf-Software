<!-- Razor page for viewing form data saved in Json file-->
@page "/orderData"
@using BisleriumCafé.Data.Services

<h3 class="custom-heading">Order Data</h3>

<div>
    <table>
    <thead>
        <tr>
            <th>Coffee Name</th>
            <th>AddIns Name</th>
            <th>Payment Status</th>
            <th>Order: Date and Time</th>
            <th>Total Price</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        <!-- Loop through each form data -->
        @foreach (var orderData in OrderServices.RetrieveOrderData())
        {
            <tr>
                <!-- Display basic form data -->
                <td>
                    <!-- Check if hobbies exist -->
                    @if (orderData.Coffee != null && orderData.Coffee.Any())
                    {
                        <!-- Display hobbies in a list -->
                            <ul>
                            @foreach (var coffee in orderData.Coffee)
                            {
                                <li>@coffee.CoffeeName - Rs.@coffee.CoffeePrice</li>
                            }
                        </ul>
                    }
                    else
                    {
                        <!-- Display a message if no hobbies -->
                        <span>No hobbies</span>
                    }
                </td>
                <td>
                    <!-- Check if hobbies exist -->
                    @if (orderData.AddIns != null && orderData.AddIns.Any())
                    {
                        <!-- Display hobbies in a list -->
                            <ul>
                            @foreach (var addins in orderData.AddIns)
                            {
                                <li>@addins.Name</li>
                            }
                        </ul>
                    }
                    else
                    {
                        <!-- Display a message if no hobbies -->
                        <span>No hobbies</span>
                    }
                </td>
                <td>@orderData.PaymentStatus</td>
                <td>@orderData.OrderDatetime</td>
                <td>@orderData.TotalPrice</td>
                <td>
                        <!-- Display the "Pay" button only if the payment status is "Pending" -->
                        @if (orderData.PaymentStatus == "Pending")
                        {
                            <button type="submit" @onclick="@(() => Payment(orderData.OrderId))" class="btn btn-primary">Pay</button>
                        }
                        else
                        {
                            <span>No Remark</span>
                        }
                </td>
            </tr>
        }
    </tbody>
</table>
</div>

@code {
    // Inject NavigationManager for navigation purposes
    [Inject]
    private NavigationManager Nav { get; set; }

    // Method to navigate to the EditHobby page with a specific hobby Id
    public void Payment(Guid id)
    {
        // try
        // {
        //     // Navigate to the EditHobby page with the specific hobby ID
        //     Nav.NavigateTo($"/Payment/{id}");
        // }
        // catch (Exception ex)
        // {
        //     // Handle any navigation errors
        //     Console.WriteLine($"Error Navigating:{ex.Message}");
        // }
        Nav.NavigateTo($"/Payment/{id}");
    }
}